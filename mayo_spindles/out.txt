"SpindleDetector (
  (model): CDILModel(
    (model): CDIL(
      (conv): ConvPart(
        (conv_net): Sequential(
          (0): Block(
            (conv): Conv1d(31, 64, kernel_size=(3,), stride=(1,), padding=(2,), dilation=(2,), padding_mode=circular)
            (res): Conv1d(31, 64, kernel_size=(1,), stride=(1,))
            (nonlinear): GELU(approximate='none')
          )
          (1): Block(
            (conv): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(4,), dilation=(4,), padding_mode=circular)
            (nonlinear): GELU(approximate='none')
          )
          (2): Block(
            (conv): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(8,), dilation=(8,), padding_mode=circular)
            (nonlinear): GELU(approximate='none')
          )
          (3): Block(
            (conv): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(16,), dilation=(16,), padding_mode=circular)
            (nonlinear): GELU(approximate='none')
          )
          (4): Block(
            (conv): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(32,), dilation=(32,), padding_mode=circular)
            (nonlinear): GELU(approximate='none')
          )
          (5): Block(
            (conv): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(64,), dilation=(64,), padding_mode=circular)
            (nonlinear): GELU(approximate='none')
          )
          (6): Block(
            (conv): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(128,), dilation=(128,), padding_mode=circular)
            (nonlinear): GELU(approximate='none')
          )
          (7): Block(
            (conv): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(256,), dilation=(256,), padding_mode=circular)
            (nonlinear): GELU(approximate='none')
          )
          (8): Block(
            (conv): DeformableConv2d(
              (offset_conv): Conv2d(64, 6, kernel_size=(3, 1), stride=(1, 1), padding=(512, 0), dilation=(512, 1), padding_mode=circular)
              (modulator_conv): Conv2d(64, 3, kernel_size=(3, 1), stride=(1, 1), padding=(512, 0), dilation=(512, 1), padding_mode=circular)
              (regular_conv): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(512, 0), dilation=(512, 1), bias=False, padding_mode=circular)
            )
            (nonlinear): GELU(approximate='none')
          )
          (9): Block(
            (conv): DeformableConv2d(
              (offset_conv): Conv2d(64, 6, kernel_size=(3, 1), stride=(1, 1), padding=(1024, 0), dilation=(1024, 1), padding_mode=circular)
              (modulator_conv): Conv2d(64, 3, kernel_size=(3, 1), stride=(1, 1), padding=(1024, 0), dilation=(1024, 1), padding_mode=circular)
              (regular_conv): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1024, 0), dilation=(1024, 1), bias=False, padding_mode=circular)
            )
            (nonlinear): GELU(approximate='none')
          )
          (10): Block(
            (conv): DeformableConv2d(
              (offset_conv): Conv2d(64, 6, kernel_size=(3, 1), stride=(1, 1), padding=(2048, 0), dilation=(2048, 1), padding_mode=circular)
              (modulator_conv): Conv2d(64, 3, kernel_size=(3, 1), stride=(1, 1), padding=(2048, 0), dilation=(2048, 1), padding_mode=circular)
              (regular_conv): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(2048, 0), dilation=(2048, 1), bias=False, padding_mode=circular)
            )
            (nonlinear): GELU(approximate='none')
          )
        )
      )
    )
  ), weights=((64,), (64, 1, 1), (64, 31, 3), (64, 31, 1), (64,), (64,), (64, 1, 1), (64, 64, 3), (64,), (64, 1, 1), (64, 64, 3), (64,), (64, 1, 1), (64, 64, 3), (64,), (64, 1, 1), (64, 64, 3), (64,), (64, 1, 1), (64, 64, 3), (64,), (64, 1, 1), (64, 64, 3), (64,), (64, 1, 1), (64, 64, 3), (6, 64, 3, 1), (6,), (3, 64, 3, 1), (3,), (64, 64, 3, 1), (6, 64, 3, 1), (6,), (3, 64, 3, 1), (3,), (64, 64, 3, 1), (6, 64, 3, 1), (6,), (3, 64, 3, 1), (3,), (64, 64, 3, 1)), parameters=137115
  (head): EfficientIntervalHead(
    (bottleneck): Sequential(
      (0): Downscale1D(
        (batchnorm): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv): Conv1d(64, 64, kernel_size=(5,), stride=(5,), bias=False)
        (act): GELU(approximate='none')
      )
      (1): Downscale1D(
        (batchnorm): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv): Conv1d(64, 64, kernel_size=(5,), stride=(5,), bias=False)
        (act): GELU(approximate='none')
      )
      (2): Downscale1D(
        (batchnorm): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv): Conv1d(64, 128, kernel_size=(5,), stride=(5,), bias=False)
        (act): GELU(approximate='none')
      )
      (3): Downscale1D(
        (batchnorm): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv): Conv1d(128, 128, kernel_size=(2,), stride=(2,), bias=False)
        (act): GELU(approximate='none')
      )
    )
    (detection_head): Sequential(
      (0): Linear(in_features=128, out_features=128, bias=True)
      (1): SiLU()
      (2): Linear(in_features=128, out_features=3, bias=True)
    )
    (segmentation_neck): Sequential(
      (0): Upscale1D(
        (batchnorm): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv): ConvTranspose1d(128, 128, kernel_size=(2,), stride=(2,), bias=False)
        (act): GELU(approximate='none')
      )
      (1): Upscale1D(
        (batchnorm): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv): ConvTranspose1d(128, 64, kernel_size=(5,), stride=(5,), bias=False)
        (act): GELU(approximate='none')
      )
      (2): Upscale1D(
        (batchnorm): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv): ConvTranspose1d(64, 64, kernel_size=(5,), stride=(5,), bias=False)
        (act): GELU(approximate='none')
      )
      (3): Upscale1D(
        (batchnorm): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv): ConvTranspose1d(64, 64, kernel_size=(5,), stride=(5,), bias=False)
        (act): GELU(approximate='none')
      )
    )
    (segmentation_head): Sequential(
      (0): Linear(in_features=64, out_features=1, bias=True)
    )
  ), weights=((64,), (64,), (64, 64, 5), (64,), (64,), (64, 64, 5), (64,), (64,), (128, 64, 5), (128,), (128,), (128, 128, 2), (128, 128), (128,), (3, 128), (3,), (128,), (128,), (128, 128, 2), (128,), (128,), (128, 64, 5), (64,), (64,), (64, 64, 5), (64,), (64,), (64, 64, 5), (1, 64), (1,)), parameters=247748
  (bce_loss): BCEWithLogitsLoss(), weights=(), parameters=0
  (mse_loss): MSELoss(), weights=(), parameters=0
)"